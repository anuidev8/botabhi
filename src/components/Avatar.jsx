/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useAnimations, useFBX, useGLTF ,PerspectiveCamera} from "@react-three/drei";
import { useFrame, useLoader } from "@react-three/fiber";
import { useControls } from "leva";
import React, { useEffect, useRef } from "react";
import * as THREE from "three";
import anim from './anim.json'
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

export function Avatar(props) {
  const { animation } = props;
  const gltf = useLoader(
    GLTFLoader,
    '/models/model-avatar.glb'
  )
  const { headFollow, cursorFollow, wireframe, } = useControls({
    headFollow: false,
    cursorFollow: false,
    wireframe: false,
  });
  const group = useRef();
  const { nodes, materials,animations:Ds } = useGLTF("models/model-avatar.glb");
  
   const { animations: typingAnimation } = useFBX("animations/Typing.fbx");
  
  const { animations: greeting } = useFBX(
    "animations/StandingGreeting.fbx"
  );
    
  
  Ds[0].name = 'Standing'
  greeting[0].name = 'Greeting'

  const { actions } = useAnimations(
    [Ds[0],greeting[0]],
    group
  );  

  /* useFrame((state) => {
    if (headFollow) {
      group.current.getObjectByName("Head").lookAt(state.camera.position);
    }
    if (cursorFollow) {
      const target = new THREE.Vector3(state.mouse.x, state.mouse.y, 1);
      group.current.getObjectByName("Spine2").lookAt(target);
    }
    
  }); */

   useEffect(() => {
    actions[animation].reset().fadeIn(0.5).play();
    return () => {
      actions[animation].reset().fadeOut(0.5);
    };
  }, [animation]);

  useEffect(() => {
    Object.values(materials).forEach((material) => {
      material.wireframe = wireframe;
    });
  }, [wireframe]);
 
  return (
    <group {...props}  /* position-y={0.4}*/  ref={group}  dispose={null}>
      <group>
        <primitive object={gltf.scene} />
      {/*   <skinnedMesh
        name="Wolf3D_Body"
        geometry={nodes.avaturn_body.geometry}
        material={materials.avaturn_body_material}
        skeleton={nodes.avaturn_body.skeleton}
      />
      <skinnedMesh
        name="Wolf3D_Look"
        geometry={nodes.avaturn_hair_0.geometry}
        material={materials.avaturn_hair_0_material}
        skeleton={nodes.avaturn_look_0.skeleton}
      />
      
      
      <skinnedMesh
        name="Wolf3D_Outfit_Look"
        geometry={nodes.avaturn_look_0.geometry}
        material={materials.avaturn_look_0_material}
        skeleton={nodes.avaturn_look_0.skeleton}
      />
     <skinnedMesh
        name="Wolf3D_Outfit"
        geometry={nodes.avaturn_look_1.geometry}
        material={materials.avaturn_look_1_material}
        skeleton={nodes.avaturn_look_1.skeleton}
      /> 
      <skinnedMesh
        name="Wolf3D_Shoes"
        geometry={nodes.avaturn_shoes_0.geometry}
        material={materials.avaturn_shoes_0_material}
        skeleton={nodes.avaturn_shoes_0.skeleton}
      />  */}
       
        
        
      </group>
    </group>
  );
}

useGLTF.preload("models/model-avatar.glb");
